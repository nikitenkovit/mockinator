function w(o,e){return new Promise((r,n)=>{const a=new Image;a.onload=()=>{const t=document.createElement("canvas");t.width=e,t.height=e;const c=t.getContext("2d");if(!c){n(new Error("Could not create canvas context"));return}c.drawImage(a,0,0,e,e),r(t.toDataURL("image/png"))},a.onerror=()=>n(new Error("Failed to load SVG")),a.src=`data:image/svg+xml;utf8,${encodeURIComponent(o)}`})}async function u(o,e){const n=await(await fetch(o)).text();return w(n,e)}let s=[];function v(o){window.originalFetch||(window.originalFetch=window.fetch),window.fetch=async(e,r)=>{const n=typeof e=="string"?e:e instanceof URL?e.href:e.url,a=(r==null?void 0:r.method)||"GET";for(const t of o)if(t.isActive&&t.path&&n.includes(t.path)&&t.method===a){t.delay&&t.delay>0&&await new Promise(f=>setTimeout(f,t.delay));let c=200,i={},g=t.data||'{"title": "Пример JSON ответа"}';if(t.responseType==="error")c=400,g=t.errorResponse||JSON.stringify({error:"Bad Request",message:"Invalid data"}),i["Content-Type"]="application/json";else if(t.responseType==="redirect")c=301,i.Location=t.redirectUrl||"http://";else switch(t.successResponseType){case"json":i["Content-Type"]="application/json";break;case"text":i["Content-Type"]="text/plain";break;case"html":i["Content-Type"]="text/html";break;case"xml":i["Content-Type"]="application/xml";break;default:i["Content-Type"]="application/json"}return new Response(g,{status:c,headers:i})}return window.originalFetch(e,r)}}function h(){window.originalFetch&&(window.fetch=window.originalFetch)}async function d(o,e){try{await chrome.scripting.executeScript({target:{tabId:e},func:v,args:[o],world:"MAIN"})}catch(r){const n=r instanceof Error?r.message:"Неизвестная ошибка";chrome.runtime.sendMessage({action:"error",error:`Ошибка при внедрении скрипта: ${n}`})}}function m(o,e){return new Promise((r,n)=>{const a=new Image;a.onload=()=>{const t=document.createElement("canvas");t.width=e,t.height=e;const c=t.getContext("2d");if(!c){n(new Error("Could not create canvas context"));return}c.drawImage(a,0,0,e,e),r(c.getImageData(0,0,e,e))},a.onerror=()=>n(new Error("Failed to load image")),a.src=o})}async function l(o){const e=o?{16:"assets/icons/active/icon16.svg",48:"assets/icons/active/icon48.svg",128:"assets/icons/active/icon128.svg"}:{16:"assets/icons/inactive/icon16.svg",48:"assets/icons/inactive/icon48.svg",128:"assets/icons/inactive/icon128.svg"};try{const r=await u(e[16],16),n=await u(e[48],48),a=await u(e[128],128);chrome.action.setIcon({imageData:{16:await m(r,16),48:await m(n,48),128:await m(a,128)}})}catch(r){console.error("Ошибка при обновлении иконки:",r)}}chrome.runtime.onMessage.addListener((o,e,r)=>{o.action==="updateRules"?(s=o.rules,chrome.storage.local.set({rules:s},()=>{chrome.runtime.lastError||chrome.storage.local.get(["isExtensionActive"],n=>{n.isExtensionActive&&chrome.tabs.query({active:!0,currentWindow:!0},a=>{var c;const t=(c=a[0])==null?void 0:c.id;t&&d(s,t)})})})):o.action==="activateExtension"?chrome.storage.local.set({isExtensionActive:!0},()=>{chrome.runtime.lastError||(l(!0),chrome.tabs.query({active:!0,currentWindow:!0},n=>{var t;const a=(t=n[0])==null?void 0:t.id;a&&d(o.rules,a)}))}):o.action==="deactivateExtension"&&chrome.storage.local.set({isExtensionActive:!1},()=>{chrome.runtime.lastError||(l(!1),chrome.tabs.query({active:!0,currentWindow:!0},n=>{var t;const a=(t=n[0])==null?void 0:t.id;a&&chrome.scripting.executeScript({target:{tabId:a},func:h,world:"MAIN"})}))})});chrome.tabs.onActivated.addListener(o=>{chrome.storage.local.set({isExtensionActive:!1},()=>{l(!1),chrome.scripting.executeScript({target:{tabId:o.tabId},func:h,world:"MAIN"})})});chrome.tabs.onUpdated.addListener((o,e,r)=>{e.status==="complete"&&chrome.storage.local.get(["rules","isExtensionActive"],n=>{n.rules&&n.isExtensionActive&&d(n.rules,o)})});chrome.storage.local.get(["rules","isExtensionActive"],o=>{chrome.runtime.lastError||(o.rules&&(s=o.rules),o.isExtensionActive!==void 0&&(l(o.isExtensionActive),o.isExtensionActive&&chrome.tabs.query({active:!0,currentWindow:!0},e=>{var n;const r=(n=e[0])==null?void 0:n.id;r&&d(s,r)})))});
